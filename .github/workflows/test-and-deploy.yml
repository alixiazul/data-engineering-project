name: Test $ Deploy sorceress

on:
  push:
    branches:
      - aws-secrets-manager-va

jobs:
  run-tests:
    name: run-tests
    runs-on: ubuntu-latest
    steps:
      - name: checkout repo
        uses: actions/checkout@v4
      - name: setup python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: install make
        run: sudo apt install make -y
      - name: install zip
        run: sudo apt install zip -y
      - name: zip extract lambda
        run: zip -urv src/extract_lambda/extract_lambda.zip src/extract_lambda/extract_lambda.py
      - name: setup aws credentials
        run: cd ~ && mkdir .aws && cd .aws && touch config && printf "[default]\nregion = eu-west-2\noutput = json\n" && printf "[default]\nregion = eu-west-2\noutput = json\n" > config && touch credentials && printf "[default]\naws_access_key_id = ${{ secrets.AWS_ACCESS_KEY_ID }}\naws_secret_access_key = ${{ secrets.AWS_SECRET_ACCESS_KEY }}\n" && printf "[default]\naws_access_key_id = ${{ secrets.AWS_ACCESS_KEY_ID }}\naws_secret_access_key = ${{ secrets.AWS_SECRET_ACCESS_KEY }}\n" > credentials
      - name: Get secrets
        uses: aws-actions/aws-secretsmanager-get-secrets@v2
        with:
            secret-ids: totesysinfo
            name-transformation: lowercase
      - name: run tests
        env: 
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: sudo make requirements && sudo make dev-setup && sudo make run-checks

  deploy-infrastructure:
    name: deploy-infrastructure
    needs: run-tests
    environment: dev
    runs-on: ubuntu-latest
    steps:
      - name: checkout repo
        uses: actions/checkout@v4
      - name: AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: eu-west-2
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: install terraform
        uses: hashicorp/setup-terraform@v3
      - name: run terraform
        working-directory: terraform
        run: terraform init && terraform plan && terraform apply -auto-approve
